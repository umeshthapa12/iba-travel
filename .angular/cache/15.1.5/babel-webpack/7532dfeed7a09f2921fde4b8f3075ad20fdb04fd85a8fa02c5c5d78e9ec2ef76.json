{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { ReplaySubject, Subject, takeUntil } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/select\";\nimport * as i5 from \"@angular/material/core\";\nimport * as i6 from \"ngx-mat-select-search\";\nfunction TopBannerComponent_mat_optgroup_22_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bank_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", bank_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", bank_r4.name, \" \");\n  }\n}\nfunction TopBannerComponent_mat_optgroup_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-optgroup\", 19);\n    i0.ɵɵtemplate(1, TopBannerComponent_mat_optgroup_22_mat_option_1_Template, 2, 2, \"mat-option\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", group_r2.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r2.banks);\n  }\n}\nexport class TopBannerComponent {\n  constructor() {\n    /** list of bank groups */\n    this.bankGroups = [{\n      name: 'Switzerland',\n      banks: [{\n        name: 'Bank A',\n        id: 'A'\n      }, {\n        name: 'Bank B',\n        id: 'B'\n      }]\n    }, {\n      name: 'France',\n      banks: [{\n        name: 'Bank C',\n        id: 'C'\n      }, {\n        name: 'Bank D',\n        id: 'D'\n      }, {\n        name: 'Bank E',\n        id: 'E'\n      }]\n    }, {\n      name: 'Italy',\n      banks: [{\n        name: 'Bank F',\n        id: 'F'\n      }, {\n        name: 'Bank G',\n        id: 'G'\n      }, {\n        name: 'Bank H',\n        id: 'H'\n      }, {\n        name: 'Bank I',\n        id: 'I'\n      }, {\n        name: 'Bank J',\n        id: 'J'\n      }]\n    }, {\n      name: 'United States of America',\n      banks: [{\n        name: 'Bank Kolombia',\n        id: 'K'\n      }]\n    }, {\n      name: 'Germany',\n      banks: [{\n        name: 'Bank L',\n        id: 'L'\n      }, {\n        name: 'Bank M',\n        id: 'M'\n      }, {\n        name: 'Bank N',\n        id: 'N'\n      }, {\n        name: 'Bank O',\n        id: 'O'\n      }, {\n        name: 'Bank P',\n        id: 'P'\n      }, {\n        name: 'Bank Q',\n        id: 'Q'\n      }, {\n        name: 'Bank R',\n        id: 'R'\n      }]\n    }];\n    /** control for the selected bank for option groups */\n    this.bankGroupsCtrl = new FormControl();\n    /** control for the MatSelect filter keyword for option groups */\n    this.bankGroupsFilterCtrl = new FormControl();\n    /** list of bank groups filtered by search keyword for option groups */\n    this.filteredBankGroups = new ReplaySubject(1);\n    /** Subject that emits when the component has been destroyed. */\n    this._onDestroy = new Subject();\n  }\n  ngOnInit() {\n    // load the initial bank list\n    this.filteredBankGroups.next(this.copyBankGroups(this.bankGroups));\n    // listen for search field value changes\n    this.bankGroupsFilterCtrl.valueChanges.pipe(takeUntil(this._onDestroy)).subscribe(() => {\n      this.filterBankGroups();\n    });\n  }\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n  filterBankGroups() {\n    if (!this.bankGroups) {\n      return;\n    }\n    // get the search keyword\n    let search = this.bankGroupsFilterCtrl.value;\n    const bankGroupsCopy = this.copyBankGroups(this.bankGroups);\n    if (!search) {\n      this.filteredBankGroups.next(bankGroupsCopy);\n      return;\n    } else {\n      search = search.toLowerCase();\n    }\n    // filter the banks\n    this.filteredBankGroups.next(bankGroupsCopy.filter(bankGroup => {\n      const showBankGroup = bankGroup.name.toLowerCase().indexOf(search) > -1;\n      if (!showBankGroup) {\n        bankGroup.banks = bankGroup.banks.filter(bank => bank.name.toLowerCase().indexOf(search) > -1);\n      }\n      return bankGroup.banks.length > 0;\n    }));\n  }\n  copyBankGroups(bankGroups) {\n    const bankGroupsCopy = [];\n    bankGroups.forEach(bankGroup => {\n      bankGroupsCopy.push({\n        name: bankGroup.name,\n        banks: bankGroup.banks.slice()\n      });\n    });\n    return bankGroupsCopy;\n  }\n}\nTopBannerComponent.ɵfac = function TopBannerComponent_Factory(t) {\n  return new (t || TopBannerComponent)();\n};\nTopBannerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TopBannerComponent,\n  selectors: [[\"top-banner\"]],\n  decls: 24,\n  vars: 5,\n  consts: [[1, \"mt-7\", \"py-0\"], [1, \"bg-holder\", \"w-50\", \"bg-right\", \"d-none\", \"d-lg-block\", 2, \"background-image\", \"url(assets/img/top-banner1.jpg)\"], [1, \"container\"], [1, \"row\"], [1, \"col-lg-6\", \"py-5\", \"py-xl-5\", \"py-xxl-7\"], [1, \"display-3\", \"text-1000\", \"fw-normal\"], [1, \"display-3\", \"text-primary\", \"fw-bold\"], [1, \"pt-5\"], [\"id\", \"nav-tab\", \"role\", \"tablist\", 1, \"nav\", \"nav-tabs\", \"therichpost-tabs\"], [\"id\", \"nav-home-tab\", \"data-bs-toggle\", \"tab\", \"data-bs-target\", \"#nav-home\", \"type\", \"button\", \"role\", \"tab\", \"aria-controls\", \"nav-home\", \"aria-selected\", \"true\", 1, \"nav-link\", \"active\"], [1, \"fas\", \"fa-map-marker-alt\"], [\"id\", \"nav-tabContent\", 1, \"tab-content\"], [\"id\", \"nav-home\", \"role\", \"tabpanel\", \"aria-labelledby\", \"nav-home-tab\", 1, \"tab-pane\", \"fade\", \"show\", \"active\"], [1, \"py-xl-3\"], [2, \"width\", \"100%\"], [\"placeholder\", \"Search Your Destination(s)\", 3, \"formControl\"], [\"singleSelect\", \"\"], [3, \"formControl\"], [3, \"label\", 4, \"ngFor\", \"ngForOf\"], [3, \"label\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function TopBannerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h1\", 5);\n      i0.ɵɵtext(6, \"Traveling \\u2013 it leaves you speechless\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"h1\", 6);\n      i0.ɵɵtext(8, \"then turns you into a storyteller\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"nav\")(11, \"div\", 8)(12, \"button\", 9);\n      i0.ɵɵelement(13, \"i\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 11)(15, \"div\", 12)(16, \"div\", 13)(17, \"mat-form-field\", 14)(18, \"mat-select\", 15, 16)(20, \"mat-option\");\n      i0.ɵɵelement(21, \"ngx-mat-select-search\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, TopBannerComponent_mat_optgroup_22_Template, 2, 2, \"mat-optgroup\", 18);\n      i0.ɵɵpipe(23, \"async\");\n      i0.ɵɵelementEnd()()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"formControl\", ctx.bankGroupsCtrl);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formControl\", ctx.bankGroupsFilterCtrl);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(23, 3, ctx.filteredBankGroups));\n    }\n  },\n  dependencies: [i1.NgForOf, i2.NgControlStatus, i2.FormControlDirective, i3.MatFormField, i4.MatSelect, i5.MatOption, i5.MatOptgroup, i6.MatSelectSearchComponent, i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","ReplaySubject","Subject","takeUntil","i0","TopBannerComponent","constructor","name","banks","id","ngOnInit","filteredBankGroups","next","copyBankGroups","bankGroups","bankGroupsFilterCtrl","valueChanges","pipe","_onDestroy","subscribe","filterBankGroups","ngOnDestroy","complete","search","value","bankGroupsCopy","toLowerCase","filter","bankGroup","showBankGroup","indexOf","bank","length","forEach","push","slice","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Dell\\OneDrive\\Desktop\\iba-travel\\src\\app\\modules\\home\\components\\top-banner\\top-banner.component.ts","C:\\Users\\Dell\\OneDrive\\Desktop\\iba-travel\\src\\app\\modules\\home\\components\\top-banner\\top-banner.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ReplaySubject, Subject, takeUntil } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'top-banner',\r\n    templateUrl: './top-banner.component.html',\r\n    styleUrls: ['./top-banner.scss']\r\n})\r\nexport class TopBannerComponent implements OnInit {\r\n  /** list of bank groups */\r\n  protected bankGroups: any[] = [\r\n    {\r\n      name: 'Switzerland',\r\n      banks: [\r\n        {name: 'Bank A', id: 'A'},\r\n        {name: 'Bank B', id: 'B'}\r\n      ]\r\n    },\r\n    {\r\n      name: 'France',\r\n      banks: [\r\n        {name: 'Bank C', id: 'C'},\r\n        {name: 'Bank D', id: 'D'},\r\n        {name: 'Bank E', id: 'E'},\r\n      ]\r\n    },\r\n    {\r\n      name: 'Italy',\r\n      banks: [\r\n        {name: 'Bank F', id: 'F'},\r\n        {name: 'Bank G', id: 'G'},\r\n        {name: 'Bank H', id: 'H'},\r\n        {name: 'Bank I', id: 'I'},\r\n        {name: 'Bank J', id: 'J'},\r\n      ]\r\n    },\r\n    {\r\n      name: 'United States of America',\r\n      banks: [\r\n        {name: 'Bank Kolombia', id: 'K'},\r\n      ]\r\n    },\r\n    {\r\n      name: 'Germany',\r\n      banks: [\r\n        {name: 'Bank L', id: 'L'},\r\n        {name: 'Bank M', id: 'M'},\r\n        {name: 'Bank N', id: 'N'},\r\n        {name: 'Bank O', id: 'O'},\r\n        {name: 'Bank P', id: 'P'},\r\n        {name: 'Bank Q', id: 'Q'},\r\n        {name: 'Bank R', id: 'R'}\r\n      ]\r\n    }\r\n  ];\r\n\r\n  /** control for the selected bank for option groups */\r\n  public bankGroupsCtrl: FormControl = new FormControl();\r\n\r\n  /** control for the MatSelect filter keyword for option groups */\r\n  public bankGroupsFilterCtrl: FormControl = new FormControl();\r\n\r\n  /** list of bank groups filtered by search keyword for option groups */\r\n  public filteredBankGroups: ReplaySubject<any[]> = new ReplaySubject<any[]>(1);\r\n\r\n  /** Subject that emits when the component has been destroyed. */\r\n  protected _onDestroy = new Subject<void>();\r\n\r\n\r\n  ngOnInit() {\r\n    // load the initial bank list\r\n    this.filteredBankGroups.next(this.copyBankGroups(this.bankGroups));\r\n\r\n    // listen for search field value changes\r\n    this.bankGroupsFilterCtrl.valueChanges\r\n      .pipe(takeUntil(this._onDestroy))\r\n      .subscribe(() => {\r\n        this.filterBankGroups();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n  }\r\n\r\n\r\n  protected filterBankGroups() {\r\n    if (!this.bankGroups) {\r\n      return;\r\n    }\r\n    // get the search keyword\r\n    let search = this.bankGroupsFilterCtrl.value;\r\n    const bankGroupsCopy = this.copyBankGroups(this.bankGroups);\r\n    if (!search) {\r\n      this.filteredBankGroups.next(bankGroupsCopy);\r\n      return;\r\n    } else {\r\n      search = search.toLowerCase();\r\n    }\r\n    // filter the banks\r\n    this.filteredBankGroups.next(\r\n      bankGroupsCopy.filter((bankGroup:any) => {\r\n        const showBankGroup = bankGroup.name.toLowerCase().indexOf(search) > -1;\r\n        if (!showBankGroup) {\r\n          bankGroup.banks = bankGroup.banks.filter((bank:any) => bank.name.toLowerCase().indexOf(search) > -1);\r\n        }\r\n        return bankGroup.banks.length > 0;\r\n      })\r\n    );\r\n  }\r\n\r\n  protected copyBankGroups(bankGroups: any[]) {\r\n    const bankGroupsCopy:any = [];\r\n    bankGroups.forEach(bankGroup => {\r\n      bankGroupsCopy.push({\r\n        name: bankGroup.name,\r\n        banks: bankGroup.banks.slice()\r\n      });\r\n    });\r\n    return bankGroupsCopy;\r\n  }\r\n}\r\n","<section class=\"mt-7 py-0\">\r\n  <div class=\"bg-holder w-50 bg-right d-none d-lg-block\" style=\"background-image:url(assets/img/top-banner1.jpg);\">\r\n  </div>\r\n  <!--/.bg-holder-->\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-6 py-5 py-xl-5 py-xxl-7\">\r\n        <h1 class=\"display-3 text-1000 fw-normal\">Traveling – it leaves you speechless</h1>\r\n        <h1 class=\"display-3 text-primary fw-bold\">then turns you into a storyteller</h1>\r\n        <div class=\"pt-5\">\r\n          <nav>\r\n            <div class=\"nav nav-tabs therichpost-tabs\" id=\"nav-tab\" role=\"tablist\">\r\n              <button class=\"nav-link active\" id=\"nav-home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#nav-home\"\r\n                type=\"button\" role=\"tab\" aria-controls=\"nav-home\" aria-selected=\"true\">\r\n                <i class=\"fas fa-map-marker-alt\"></i>\r\n              </button>\r\n            </div>\r\n            <div class=\"tab-content\" id=\"nav-tabContent\">\r\n              <div class=\"tab-pane fade show active\" id=\"nav-home\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\r\n                <div class=\"py-xl-3\">\r\n                <mat-form-field style=\"width:100%\">\r\n                  <mat-select [formControl]=\"bankGroupsCtrl\" placeholder=\"Search Your Destination(s)\" #singleSelect>\r\n                    <mat-option>\r\n                      <ngx-mat-select-search [formControl]=\"bankGroupsFilterCtrl\"></ngx-mat-select-search>\r\n                    </mat-option>\r\n                    <mat-optgroup *ngFor=\"let group of filteredBankGroups | async\" [label]=\"group.name\">\r\n                      <mat-option *ngFor=\"let bank of group.banks\" [value]=\"bank\">\r\n                        {{bank.name}}\r\n                      </mat-option>\r\n                    </mat-optgroup>\r\n                  </mat-select>\r\n                </mat-form-field>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}